{
  "contractName": "Deck",
  "abi": [
    {
      "constant": true,
      "inputs": [],
      "name": "name",
      "outputs": [
        {
          "name": "",
          "type": "string"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": false,
      "inputs": [
        {
          "name": "spender",
          "type": "address"
        },
        {
          "name": "value",
          "type": "uint256"
        }
      ],
      "name": "approve",
      "outputs": [
        {
          "name": "",
          "type": "bool"
        }
      ],
      "payable": false,
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [],
      "name": "totalSupply",
      "outputs": [
        {
          "name": "",
          "type": "uint256"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": false,
      "inputs": [
        {
          "name": "from",
          "type": "address"
        },
        {
          "name": "to",
          "type": "address"
        },
        {
          "name": "value",
          "type": "uint256"
        }
      ],
      "name": "transferFrom",
      "outputs": [
        {
          "name": "",
          "type": "bool"
        }
      ],
      "payable": false,
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [],
      "name": "decimals",
      "outputs": [
        {
          "name": "",
          "type": "uint8"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": false,
      "inputs": [
        {
          "name": "spender",
          "type": "address"
        },
        {
          "name": "addedValue",
          "type": "uint256"
        }
      ],
      "name": "increaseAllowance",
      "outputs": [
        {
          "name": "",
          "type": "bool"
        }
      ],
      "payable": false,
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "constant": false,
      "inputs": [
        {
          "name": "to",
          "type": "address"
        },
        {
          "name": "value",
          "type": "uint256"
        }
      ],
      "name": "mint",
      "outputs": [
        {
          "name": "",
          "type": "bool"
        }
      ],
      "payable": false,
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "constant": false,
      "inputs": [
        {
          "name": "value",
          "type": "uint256"
        }
      ],
      "name": "burn",
      "outputs": [],
      "payable": false,
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [
        {
          "name": "owner",
          "type": "address"
        }
      ],
      "name": "balanceOf",
      "outputs": [
        {
          "name": "",
          "type": "uint256"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": false,
      "inputs": [
        {
          "name": "from",
          "type": "address"
        },
        {
          "name": "value",
          "type": "uint256"
        }
      ],
      "name": "burnFrom",
      "outputs": [],
      "payable": false,
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [],
      "name": "symbol",
      "outputs": [
        {
          "name": "",
          "type": "string"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": false,
      "inputs": [
        {
          "name": "account",
          "type": "address"
        }
      ],
      "name": "addMinter",
      "outputs": [],
      "payable": false,
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "constant": false,
      "inputs": [],
      "name": "renounceMinter",
      "outputs": [],
      "payable": false,
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "constant": false,
      "inputs": [
        {
          "name": "spender",
          "type": "address"
        },
        {
          "name": "subtractedValue",
          "type": "uint256"
        }
      ],
      "name": "decreaseAllowance",
      "outputs": [
        {
          "name": "",
          "type": "bool"
        }
      ],
      "payable": false,
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "constant": false,
      "inputs": [
        {
          "name": "to",
          "type": "address"
        },
        {
          "name": "value",
          "type": "uint256"
        }
      ],
      "name": "transfer",
      "outputs": [
        {
          "name": "",
          "type": "bool"
        }
      ],
      "payable": false,
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [
        {
          "name": "account",
          "type": "address"
        }
      ],
      "name": "isMinter",
      "outputs": [
        {
          "name": "",
          "type": "bool"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [
        {
          "name": "owner",
          "type": "address"
        },
        {
          "name": "spender",
          "type": "address"
        }
      ],
      "name": "allowance",
      "outputs": [
        {
          "name": "",
          "type": "uint256"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "name": "name",
          "type": "string"
        },
        {
          "name": "symbol",
          "type": "string"
        },
        {
          "name": "decimals",
          "type": "uint8"
        }
      ],
      "payable": false,
      "stateMutability": "nonpayable",
      "type": "constructor"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "name": "account",
          "type": "address"
        }
      ],
      "name": "MinterAdded",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "name": "account",
          "type": "address"
        }
      ],
      "name": "MinterRemoved",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "name": "from",
          "type": "address"
        },
        {
          "indexed": true,
          "name": "to",
          "type": "address"
        },
        {
          "indexed": false,
          "name": "value",
          "type": "uint256"
        }
      ],
      "name": "Transfer",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "name": "owner",
          "type": "address"
        },
        {
          "indexed": true,
          "name": "spender",
          "type": "address"
        },
        {
          "indexed": false,
          "name": "value",
          "type": "uint256"
        }
      ],
      "name": "Approval",
      "type": "event"
    }
  ],
  "bytecode": "",
  "deployedBytecode": "0x6080604052600436106100f05763ffffffff7c010000000000000000000000000000000000000000000000000000000060003504166306fdde0381146100f5578063095ea7b31461017f57806318160ddd146101cc57806323b872dd146101f3578063313ce56714610236578063395093511461026157806340c10f191461029a57806342966c68146102d357806370a08231146102ff57806379cc67901461033257806395d89b411461036b578063983b2d561461038057806398650275146103b3578063a457c2d7146103c8578063a9059cbb14610401578063aa271e1a1461043a578063dd62ed3e1461046d575b600080fd5b34801561010157600080fd5b5061010a6104a8565b6040805160208082528351818301528351919283929083019185019080838360005b8381101561014457818101518382015260200161012c565b50505050905090810190601f1680156101715780820380516001836020036101000a031916815260200191505b509250505060405180910390f35b34801561018b57600080fd5b506101b8600480360360408110156101a257600080fd5b50600160a060020a03813516906020013561053e565b604080519115158252519081900360200190f35b3480156101d857600080fd5b506101e16105aa565b60408051918252519081900360200190f35b3480156101ff57600080fd5b506101b86004803603606081101561021657600080fd5b50600160a060020a038135811691602081013590911690604001356105b0565b34801561024257600080fd5b5061024b610667565b6040805160ff9092168252519081900360200190f35b34801561026d57600080fd5b506101b86004803603604081101561028457600080fd5b50600160a060020a038135169060200135610670565b3480156102a657600080fd5b506101b8600480360360408110156102bd57600080fd5b50600160a060020a03813516906020013561070e565b3480156102df57600080fd5b506102fd600480360360208110156102f657600080fd5b5035610737565b005b34801561030b57600080fd5b506101e16004803603602081101561032257600080fd5b5035600160a060020a0316610744565b34801561033e57600080fd5b506102fd6004803603604081101561035557600080fd5b50600160a060020a03813516906020013561075f565b34801561037757600080fd5b5061010a61076d565b34801561038c57600080fd5b506102fd600480360360208110156103a357600080fd5b5035600160a060020a03166107cd565b3480156103bf57600080fd5b506102fd6107ea565b3480156103d457600080fd5b506101b8600480360360408110156103eb57600080fd5b50600160a060020a0381351690602001356107f5565b34801561040d57600080fd5b506101b86004803603604081101561042457600080fd5b50600160a060020a038135169060200135610840565b34801561044657600080fd5b506101b86004803603602081101561045d57600080fd5b5035600160a060020a031661084d565b34801561047957600080fd5b506101e16004803603604081101561049057600080fd5b50600160a060020a0381358116916020013516610866565b60008054604080516020601f60026000196101006001881615020190951694909404938401819004810282018101909252828152606093909290918301828280156105345780601f1061050957610100808354040283529160200191610534565b820191906000526020600020905b81548152906001019060200180831161051757829003601f168201915b5050505050905090565b6000600160a060020a038316151561055557600080fd5b336000818152600460209081526040808320600160a060020a0388168085529083529281902086905580518681529051929392600080516020610cf7833981519152929181900390910190a350600192915050565b60055490565b600160a060020a03831660009081526004602090815260408083203384529091528120546105e4908363ffffffff61089116565b600160a060020a03851660009081526004602090815260408083203384529091529020556106138484846108a6565b600160a060020a038416600081815260046020908152604080832033808552908352928190205481519081529051929392600080516020610cf7833981519152929181900390910190a35060019392505050565b60025460ff1690565b6000600160a060020a038316151561068757600080fd5b336000908152600460209081526040808320600160a060020a03871684529091529020546106bb908363ffffffff61097516565b336000818152600460209081526040808320600160a060020a038916808552908352928190208590558051948552519193600080516020610cf7833981519152929081900390910190a350600192915050565b60006107193361084d565b151561072457600080fd5b61072e838361098e565b50600192915050565b6107413382610a3a565b50565b600160a060020a031660009081526003602052604090205490565b6107698282610ae5565b5050565b60018054604080516020601f600260001961010087891615020190951694909404938401819004810282018101909252828152606093909290918301828280156105345780601f1061050957610100808354040283529160200191610534565b6107d63361084d565b15156107e157600080fd5b61074181610b95565b6107f333610bdd565b565b6000600160a060020a038316151561080c57600080fd5b336000908152600460209081526040808320600160a060020a03871684529091529020546106bb908363ffffffff61089116565b600061072e3384846108a6565b600061086060068363ffffffff610c2516565b92915050565b600160a060020a03918216600090815260046020908152604080832093909416825291909152205490565b6000828211156108a057600080fd5b50900390565b600160a060020a03821615156108bb57600080fd5b600160a060020a0383166000908152600360205260409020546108e4908263ffffffff61089116565b600160a060020a038085166000908152600360205260408082209390935590841681522054610919908263ffffffff61097516565b600160a060020a0380841660008181526003602090815260409182902094909455805185815290519193928716927fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef92918290030190a3505050565b60008282018381101561098757600080fd5b9392505050565b600160a060020a03821615156109a357600080fd5b6005546109b6908263ffffffff61097516565b600555600160a060020a0382166000908152600360205260409020546109e2908263ffffffff61097516565b600160a060020a03831660008181526003602090815260408083209490945583518581529351929391927fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef9281900390910190a35050565b600160a060020a0382161515610a4f57600080fd5b600554610a62908263ffffffff61089116565b600555600160a060020a038216600090815260036020526040902054610a8e908263ffffffff61089116565b600160a060020a0383166000818152600360209081526040808320949094558351858152935191937fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef929081900390910190a35050565b600160a060020a0382166000908152600460209081526040808320338452909152902054610b19908263ffffffff61089116565b600160a060020a0383166000908152600460209081526040808320338452909152902055610b478282610a3a565b600160a060020a038216600081815260046020908152604080832033808552908352928190205481519081529051929392600080516020610cf7833981519152929181900390910190a35050565b610ba660068263ffffffff610c5c16565b604051600160a060020a038216907f6ae172837ea30b801fbfcdd4108aa1d5bf8ff775444fd70256b44e6bf3dfc3f690600090a250565b610bee60068263ffffffff610caa16565b604051600160a060020a038216907fe94479a9f7e1952cc78f2d6baab678adc1b772d936c6583def489e524cb6669290600090a250565b6000600160a060020a0382161515610c3c57600080fd5b50600160a060020a03166000908152602091909152604090205460ff1690565b600160a060020a0381161515610c7157600080fd5b610c7b8282610c25565b15610c8557600080fd5b600160a060020a0316600090815260209190915260409020805460ff19166001179055565b600160a060020a0381161515610cbf57600080fd5b610cc98282610c25565b1515610cd457600080fd5b600160a060020a0316600090815260209190915260409020805460ff1916905556fe8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b925a165627a7a72305820f2a2f80b5c695ef8ec89a32f71ed2e7235dce501b8aed1b3ca280722961edc370029",
  "sourceMap": "242:193:4:-;;;308:124;8:9:-1;5:2;;;30:1;27;20:12;5:2;308:124:4;;;;;;;;;;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;308:124:4;;;;;;19:11:-1;14:3;11:20;8:2;;;44:1;41;34:12;8:2;62:21;;123:4;114:14;;138:31;;;135:2;;;182:1;179;172:12;135:2;213:10;;261:11;244:29;;285:43;;;282:58;-1:-1;233:115;230:2;;;361:1;358;351:12;230:2;0:372;;308:124:4;;;;;;;19:11:-1;14:3;11:20;8:2;;;44:1;41;34:12;8:2;62:21;;123:4;114:14;;138:31;;;135:2;;;182:1;179;172:12;135:2;213:10;;261:11;244:29;;285:43;;;282:58;-1:-1;233:115;230:2;;;361:1;358;351:12;230:2;-1:-1;;308:124:4;;;;;493:12:15;;308:124:4;;-1:-1:-1;308:124:4;-1:-1:-1;394:4:4;;308:124;;;;493:12:15;;:5;;:12;;;;:::i;:::-;-1:-1:-1;515:16:15;;;;:7;;:16;;;;;:::i;:::-;-1:-1:-1;541:9:15;:20;;-1:-1:-1;;541:20:15;;;;;;;;;;;;-1:-1:-1;275:22:10;;-1:-1:-1;286:10:10;275;;;;:22;:::i;:::-;308:124:4;;;242:193;;685:119:10;741:21;:8;754:7;741:12;;;;;;:21;:::i;:::-;777:20;;-1:-1:-1;;;;;777:20:10;;;;;;;;685:119;:::o;259:181:9:-;-1:-1:-1;;;;;335:21:9;;;;327:30;;;;;;376:18;380:4;386:7;376:3;;;;:18;:::i;:::-;375:19;367:28;;;;;;-1:-1:-1;;;;;406:20:9;:11;:20;;;;;;;;;;;:27;;-1:-1:-1;;406:27:9;429:4;406:27;;;259:181::o;786:162::-;858:4;-1:-1:-1;;;;;882:21:9;;;;874:30;;;;;;-1:-1:-1;;;;;;921:20:9;:11;:20;;;;;;;;;;;;;;;786:162::o;242:193:4:-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;242:193:4;;;-1:-1:-1;242:193:4;:::i;:::-;;;:::o;:::-;;;;;;;;;;;;;;;;;;;;:::o;:::-;;;;;;;",
  "deployedSourceMap": "242:193:4:-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;628:81:15;;8:9:-1;5:2;;;30:1;27;20:12;5:2;628:81:15;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;8:100:-1;33:3;30:1;27:10;8:100;;;90:11;;;84:18;71:11;;;64:39;52:2;45:10;8:100;;;12:14;628:81:15;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;2735:238:13;;8:9:-1;5:2;;;30:1;27;20:12;5:2;2735:238:13;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;-1:-1;;;;;;2735:238:13;;;;;;;;;;;;;;;;;;;;;;;;;;;936:89;;8:9:-1;5:2;;;30:1;27;20:12;5:2;936:89:13;;;;;;;;;;;;;;;;;;;;3436:294;;8:9:-1;5:2;;;30:1;27;20:12;5:2;3436:294:13;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;-1:-1;;;;;;3436:294:13;;;;;;;;;;;;;;;;;;930:81:15;;8:9:-1;5:2;;;30:1;27;20:12;5:2;930:81:15;;;;;;;;;;;;;;;;;;;;;;;4233:317:13;;8:9:-1;5:2;;;30:1;27;20:12;5:2;4233:317:13;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;-1:-1;;;;;;4233:317:13;;;;;;;;;443:128:16;;8:9:-1;5:2;;;30:1;27;20:12;5:2;443:128:16;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;-1:-1;;;;;;443:128:16;;;;;;;;;295:77:14;;8:9:-1;5:2;;;30:1;27;20:12;5:2;295:77:14;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;-1:-1;295:77:14;;;;;1234:104:13;;8:9:-1;5:2;;;30:1;27;20:12;5:2;1234:104:13;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;-1:-1;1234:104:13;-1:-1:-1;;;;;1234:104:13;;;624:93:14;;8:9:-1;5:2;;;30:1;27;20:12;5:2;624:93:14;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;-1:-1;;;;;;624:93:14;;;;;;;;;771:85:15;;8:9:-1;5:2;;;30:1;27;20:12;5:2;771:85:15;;;;508:90:10;;8:9:-1;5:2;;;30:1;27;20:12;5:2;508:90:10;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;-1:-1;508:90:10;-1:-1:-1;;;;;508:90:10;;;604:75;;8:9:-1;5:2;;;30:1;27;20:12;5:2;604:75:10;;;;5058:327:13;;8:9:-1;5:2;;;30:1;27;20:12;5:2;5058:327:13;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;-1:-1;;;;;;5058:327:13;;;;;;;;;1962:137;;8:9:-1;5:2;;;30:1;27;20:12;5:2;1962:137:13;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;-1:-1;;;;;;1962:137:13;;;;;;;;;395:107:10;;8:9:-1;5:2;;;30:1;27;20:12;5:2;395:107:10;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;-1:-1;395:107:10;-1:-1:-1;;;;;395:107:10;;;1669:129:13;;8:9:-1;5:2;;;30:1;27;20:12;5:2;1669:129:13;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;-1:-1;;;;;;1669:129:13;;;;;;;;;;;628:81:15;697:5;690:12;;;;;;;;-1:-1:-1;;690:12:15;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;665:13;;690:12;;697:5;;690:12;;697:5;690:12;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;628:81;:::o;2735:238:13:-;2800:4;-1:-1:-1;;;;;2824:21:13;;;;2816:30;;;;;;2866:10;2857:20;;;;:8;:20;;;;;;;;-1:-1:-1;;;;;2857:29:13;;;;;;;;;;;;:37;;;2909:36;;;;;;;2857:29;;2866:10;-1:-1:-1;;;;;;;;;;;2909:36:13;;;;;;;;;;-1:-1:-1;2962:4:13;2735:238;;;;:::o;936:89::-;1006:12;;936:89;:::o;3436:294::-;-1:-1:-1;;;;;3560:14:13;;3515:4;3560:14;;;:8;:14;;;;;;;;3575:10;3560:26;;;;;;;;:37;;3591:5;3560:37;:30;:37;:::i;:::-;-1:-1:-1;;;;;3531:14:13;;;;;;:8;:14;;;;;;;;3546:10;3531:26;;;;;;;:66;3607:26;3540:4;3623:2;3627:5;3607:9;:26::i;:::-;-1:-1:-1;;;;;3648:54:13;;3675:14;;;;:8;:14;;;;;;;;3663:10;3675:26;;;;;;;;;;;3648:54;;;;;;;3663:10;;3648:54;-1:-1:-1;;;;;;;;;;;3648:54:13;;;;;;;;;;-1:-1:-1;3719:4:13;3436:294;;;;;:::o;930:81:15:-;995:9;;;;930:81;:::o;4233:317:13:-;4313:4;-1:-1:-1;;;;;4337:21:13;;;;4329:30;;;;;;4411:10;4402:20;;;;:8;:20;;;;;;;;-1:-1:-1;;;;;4402:29:13;;;;;;;;;;:45;;4436:10;4402:45;:33;:45;:::i;:::-;4379:10;4370:20;;;;:8;:20;;;;;;;;-1:-1:-1;;;;;4370:29:13;;;;;;;;;;;;:77;;;4462:60;;;;;;4370:29;;-1:-1:-1;;;;;;;;;;;4462:60:13;;;;;;;;;;-1:-1:-1;4539:4:13;4233:317;;;;:::o;443:128:16:-;511:4;350:20:10;359:10;350:8;:20::i;:::-;342:29;;;;;;;;527:16:16;533:2;537:5;527;:16::i;:::-;-1:-1:-1;560:4:16;443:128;;;;:::o;295:77:14:-;341:24;347:10;359:5;341;:24::i;:::-;295:77;:::o;1234:104:13:-;-1:-1:-1;;;;;1315:16:13;1289:7;1315:16;;;:9;:16;;;;;;;1234:104::o;624:93:14:-;688:22;698:4;704:5;688:9;:22::i;:::-;624:93;;:::o;771:85:15:-;842:7;835:14;;;;;;;;-1:-1:-1;;835:14:15;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;810:13;;835:14;;842:7;;835:14;;842:7;835:14;;;;;;;;;;;;;;;;;;;;;;;;508:90:10;350:20;359:10;350:8;:20::i;:::-;342:29;;;;;;;;572:19;583:7;572:10;:19::i;604:75::-;647:25;661:10;647:13;:25::i;:::-;604:75::o;5058:327:13:-;5143:4;-1:-1:-1;;;;;5167:21:13;;;;5159:30;;;;;;5241:10;5232:20;;;;:8;:20;;;;;;;;-1:-1:-1;;;;;5232:29:13;;;;;;;;;;:50;;5266:15;5232:50;:33;:50;:::i;1962:137::-;2023:4;2039:32;2049:10;2061:2;2065:5;2039:9;:32::i;395:107:10:-;451:4;474:21;:8;487:7;474:21;:12;:21;:::i;:::-;467:28;395:107;-1:-1:-1;;395:107:10:o;1669:129:13:-;-1:-1:-1;;;;;1767:15:13;;;1741:7;1767:15;;;:8;:15;;;;;;;;:24;;;;;;;;;;;;;1669:129::o;1205:145:11:-;1263:7;1290:6;;;;1282:15;;;;;;-1:-1:-1;1319:5:11;;;1205:145::o;5599:256:13:-;-1:-1:-1;;;;;5686:16:13;;;;5678:25;;;;;;-1:-1:-1;;;;;5732:15:13;;;;;;:9;:15;;;;;;:26;;5752:5;5732:26;:19;:26;:::i;:::-;-1:-1:-1;;;;;5714:15:13;;;;;;;:9;:15;;;;;;:44;;;;5784:13;;;;;;;:24;;5802:5;5784:24;:17;:24;:::i;:::-;-1:-1:-1;;;;;5768:13:13;;;;;;;:9;:13;;;;;;;;;:40;;;;5823:25;;;;;;;5768:13;;5823:25;;;;;;;;;;;;;5599:256;;;:::o;1431:145:11:-;1489:7;1520:5;;;1543:6;;;;1535:15;;;;;;1568:1;1431:145;-1:-1:-1;;;1431:145:11:o;6198:263:13:-;-1:-1:-1;;;;;6272:21:13;;;;6264:30;;;;;;6320:12;;:23;;6337:5;6320:23;:16;:23;:::i;:::-;6305:12;:38;-1:-1:-1;;;;;6374:18:13;;;;;;:9;:18;;;;;;:29;;6397:5;6374:29;:22;:29;:::i;:::-;-1:-1:-1;;;;;6353:18:13;;;;;;:9;:18;;;;;;;;:50;;;;6418:36;;;;;;;6353:18;;;;6418:36;;;;;;;;;;6198:263;;:::o;6687:::-;-1:-1:-1;;;;;6761:21:13;;;;6753:30;;;;;;6809:12;;:23;;6826:5;6809:23;:16;:23;:::i;:::-;6794:12;:38;-1:-1:-1;;;;;6863:18:13;;;;;;:9;:18;;;;;;:29;;6886:5;6863:29;:22;:29;:::i;:::-;-1:-1:-1;;;;;6842:18:13;;;;;;:9;:18;;;;;;;;:50;;;;6907:36;;;;;;;6842:18;;6907:36;;;;;;;;;;;6687:263;;:::o;7339:255::-;-1:-1:-1;;;;;7441:17:13;;;;;;:8;:17;;;;;;;;7459:10;7441:29;;;;;;;;:40;;7475:5;7441:40;:33;:40;:::i;:::-;-1:-1:-1;;;;;7409:17:13;;;;;;:8;:17;;;;;;;;7427:10;7409:29;;;;;;;:72;7491:21;7418:7;7506:5;7491;:21::i;:::-;-1:-1:-1;;;;;7527:60:13;;7557:17;;;;:8;:17;;;;;;;;7545:10;7557:29;;;;;;;;;;;7527:60;;;;;;;7545:10;;7527:60;-1:-1:-1;;;;;;;;;;;7527:60:13;;;;;;;;;;7339:255;;:::o;685:119:10:-;741:21;:8;754:7;741:21;:12;:21;:::i;:::-;777:20;;-1:-1:-1;;;;;777:20:10;;;;;;;;685:119;:::o;810:127::-;869:24;:8;885:7;869:24;:15;:24;:::i;:::-;908:22;;-1:-1:-1;;;;;908:22:10;;;;;;;;810:127;:::o;786:162:9:-;858:4;-1:-1:-1;;;;;882:21:9;;;;874:30;;;;;;-1:-1:-1;;;;;;921:20:9;:11;:20;;;;;;;;;;;;;;;786:162::o;259:181::-;-1:-1:-1;;;;;335:21:9;;;;327:30;;;;;;376:18;380:4;386:7;376:3;:18::i;:::-;375:19;367:28;;;;;;-1:-1:-1;;;;;406:20:9;:11;:20;;;;;;;;;;;:27;;-1:-1:-1;;406:27:9;429:4;406:27;;;259:181::o;514:184::-;-1:-1:-1;;;;;593:21:9;;;;585:30;;;;;;633:18;637:4;643:7;633:3;:18::i;:::-;625:27;;;;;;;;-1:-1:-1;;;;;663:20:9;686:5;663:20;;;;;;;;;;;:28;;-1:-1:-1;;663:28:9;;;514:184::o",
  "source": "pragma solidity ^0.5.0;\n\nimport \"openzeppelin-solidity/contracts/token/ERC20/ERC20Detailed.sol\";\nimport \"openzeppelin-solidity/contracts/token/ERC20/ERC20Mintable.sol\";\nimport \"openzeppelin-solidity/contracts/token/ERC20/ERC20Burnable.sol\";\n\ncontract Deck is ERC20Detailed, ERC20Mintable, ERC20Burnable {\n\n  constructor(string memory name, string memory symbol, uint8 decimals)\n  ERC20Detailed(name, symbol, decimals)\n  public {\n  }\n\n}\n",
  "sourcePath": "/Users/centroine/Documents/iris/decompanyio/decompanyio/contracts/Deck.sol",
  "ast": {
    "absolutePath": "/Users/centroine/Documents/iris/decompanyio/decompanyio/contracts/Deck.sol",
    "exportedSymbols": {
      "Deck": [
        2211
      ]
    },
    "id": 2212,
    "nodeType": "SourceUnit",
    "nodes": [
      {
        "id": 2186,
        "literals": [
          "solidity",
          "^",
          "0.5",
          ".0"
        ],
        "nodeType": "PragmaDirective",
        "src": "0:23:4"
      },
      {
        "absolutePath": "openzeppelin-solidity/contracts/token/ERC20/ERC20Detailed.sol",
        "file": "openzeppelin-solidity/contracts/token/ERC20/ERC20Detailed.sol",
        "id": 2187,
        "nodeType": "ImportDirective",
        "scope": 2212,
        "sourceUnit": 4624,
        "src": "25:71:4",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "absolutePath": "openzeppelin-solidity/contracts/token/ERC20/ERC20Mintable.sol",
        "file": "openzeppelin-solidity/contracts/token/ERC20/ERC20Mintable.sol",
        "id": 2188,
        "nodeType": "ImportDirective",
        "scope": 2212,
        "sourceUnit": 4652,
        "src": "97:71:4",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "absolutePath": "openzeppelin-solidity/contracts/token/ERC20/ERC20Burnable.sol",
        "file": "openzeppelin-solidity/contracts/token/ERC20/ERC20Burnable.sol",
        "id": 2189,
        "nodeType": "ImportDirective",
        "scope": 2212,
        "sourceUnit": 4566,
        "src": "169:71:4",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "baseContracts": [
          {
            "arguments": null,
            "baseName": {
              "contractScope": null,
              "id": 2190,
              "name": "ERC20Detailed",
              "nodeType": "UserDefinedTypeName",
              "referencedDeclaration": 4623,
              "src": "259:13:4",
              "typeDescriptions": {
                "typeIdentifier": "t_contract$_ERC20Detailed_$4623",
                "typeString": "contract ERC20Detailed"
              }
            },
            "id": 2191,
            "nodeType": "InheritanceSpecifier",
            "src": "259:13:4"
          },
          {
            "arguments": null,
            "baseName": {
              "contractScope": null,
              "id": 2192,
              "name": "ERC20Mintable",
              "nodeType": "UserDefinedTypeName",
              "referencedDeclaration": 4651,
              "src": "274:13:4",
              "typeDescriptions": {
                "typeIdentifier": "t_contract$_ERC20Mintable_$4651",
                "typeString": "contract ERC20Mintable"
              }
            },
            "id": 2193,
            "nodeType": "InheritanceSpecifier",
            "src": "274:13:4"
          },
          {
            "arguments": null,
            "baseName": {
              "contractScope": null,
              "id": 2194,
              "name": "ERC20Burnable",
              "nodeType": "UserDefinedTypeName",
              "referencedDeclaration": 4565,
              "src": "289:13:4",
              "typeDescriptions": {
                "typeIdentifier": "t_contract$_ERC20Burnable_$4565",
                "typeString": "contract ERC20Burnable"
              }
            },
            "id": 2195,
            "nodeType": "InheritanceSpecifier",
            "src": "289:13:4"
          }
        ],
        "contractDependencies": [
          3865,
          4534,
          4565,
          4623,
          4651,
          4720
        ],
        "contractKind": "contract",
        "documentation": null,
        "fullyImplemented": true,
        "id": 2211,
        "linearizedBaseContracts": [
          2211,
          4565,
          4651,
          3865,
          4534,
          4623,
          4720
        ],
        "name": "Deck",
        "nodeType": "ContractDefinition",
        "nodes": [
          {
            "body": {
              "id": 2209,
              "nodeType": "Block",
              "src": "427:5:4",
              "statements": []
            },
            "documentation": null,
            "id": 2210,
            "implemented": true,
            "kind": "constructor",
            "modifiers": [
              {
                "arguments": [
                  {
                    "argumentTypes": null,
                    "id": 2204,
                    "name": "name",
                    "nodeType": "Identifier",
                    "overloadedDeclarations": [],
                    "referencedDeclaration": 2197,
                    "src": "394:4:4",
                    "typeDescriptions": {
                      "typeIdentifier": "t_string_memory_ptr",
                      "typeString": "string memory"
                    }
                  },
                  {
                    "argumentTypes": null,
                    "id": 2205,
                    "name": "symbol",
                    "nodeType": "Identifier",
                    "overloadedDeclarations": [],
                    "referencedDeclaration": 2199,
                    "src": "400:6:4",
                    "typeDescriptions": {
                      "typeIdentifier": "t_string_memory_ptr",
                      "typeString": "string memory"
                    }
                  },
                  {
                    "argumentTypes": null,
                    "id": 2206,
                    "name": "decimals",
                    "nodeType": "Identifier",
                    "overloadedDeclarations": [],
                    "referencedDeclaration": 2201,
                    "src": "408:8:4",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint8",
                      "typeString": "uint8"
                    }
                  }
                ],
                "id": 2207,
                "modifierName": {
                  "argumentTypes": null,
                  "id": 2203,
                  "name": "ERC20Detailed",
                  "nodeType": "Identifier",
                  "overloadedDeclarations": [],
                  "referencedDeclaration": 4623,
                  "src": "380:13:4",
                  "typeDescriptions": {
                    "typeIdentifier": "t_type$_t_contract$_ERC20Detailed_$4623_$",
                    "typeString": "type(contract ERC20Detailed)"
                  }
                },
                "nodeType": "ModifierInvocation",
                "src": "380:37:4"
              }
            ],
            "name": "",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 2202,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 2197,
                  "name": "name",
                  "nodeType": "VariableDeclaration",
                  "scope": 2210,
                  "src": "320:18:4",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_string_memory_ptr",
                    "typeString": "string"
                  },
                  "typeName": {
                    "id": 2196,
                    "name": "string",
                    "nodeType": "ElementaryTypeName",
                    "src": "320:6:4",
                    "typeDescriptions": {
                      "typeIdentifier": "t_string_storage_ptr",
                      "typeString": "string"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 2199,
                  "name": "symbol",
                  "nodeType": "VariableDeclaration",
                  "scope": 2210,
                  "src": "340:20:4",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_string_memory_ptr",
                    "typeString": "string"
                  },
                  "typeName": {
                    "id": 2198,
                    "name": "string",
                    "nodeType": "ElementaryTypeName",
                    "src": "340:6:4",
                    "typeDescriptions": {
                      "typeIdentifier": "t_string_storage_ptr",
                      "typeString": "string"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 2201,
                  "name": "decimals",
                  "nodeType": "VariableDeclaration",
                  "scope": 2210,
                  "src": "362:14:4",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint8",
                    "typeString": "uint8"
                  },
                  "typeName": {
                    "id": 2200,
                    "name": "uint8",
                    "nodeType": "ElementaryTypeName",
                    "src": "362:5:4",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint8",
                      "typeString": "uint8"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "319:58:4"
            },
            "returnParameters": {
              "id": 2208,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "427:0:4"
            },
            "scope": 2211,
            "src": "308:124:4",
            "stateMutability": "nonpayable",
            "superFunction": null,
            "visibility": "public"
          }
        ],
        "scope": 2212,
        "src": "242:193:4"
      }
    ],
    "src": "0:436:4"
  },
  "legacyAST": {
    "absolutePath": "/Users/centroine/Documents/iris/decompanyio/decompanyio/contracts/Deck.sol",
    "exportedSymbols": {
      "Deck": [
        2211
      ]
    },
    "id": 2212,
    "nodeType": "SourceUnit",
    "nodes": [
      {
        "id": 2186,
        "literals": [
          "solidity",
          "^",
          "0.5",
          ".0"
        ],
        "nodeType": "PragmaDirective",
        "src": "0:23:4"
      },
      {
        "absolutePath": "openzeppelin-solidity/contracts/token/ERC20/ERC20Detailed.sol",
        "file": "openzeppelin-solidity/contracts/token/ERC20/ERC20Detailed.sol",
        "id": 2187,
        "nodeType": "ImportDirective",
        "scope": 2212,
        "sourceUnit": 4624,
        "src": "25:71:4",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "absolutePath": "openzeppelin-solidity/contracts/token/ERC20/ERC20Mintable.sol",
        "file": "openzeppelin-solidity/contracts/token/ERC20/ERC20Mintable.sol",
        "id": 2188,
        "nodeType": "ImportDirective",
        "scope": 2212,
        "sourceUnit": 4652,
        "src": "97:71:4",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "absolutePath": "openzeppelin-solidity/contracts/token/ERC20/ERC20Burnable.sol",
        "file": "openzeppelin-solidity/contracts/token/ERC20/ERC20Burnable.sol",
        "id": 2189,
        "nodeType": "ImportDirective",
        "scope": 2212,
        "sourceUnit": 4566,
        "src": "169:71:4",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "baseContracts": [
          {
            "arguments": null,
            "baseName": {
              "contractScope": null,
              "id": 2190,
              "name": "ERC20Detailed",
              "nodeType": "UserDefinedTypeName",
              "referencedDeclaration": 4623,
              "src": "259:13:4",
              "typeDescriptions": {
                "typeIdentifier": "t_contract$_ERC20Detailed_$4623",
                "typeString": "contract ERC20Detailed"
              }
            },
            "id": 2191,
            "nodeType": "InheritanceSpecifier",
            "src": "259:13:4"
          },
          {
            "arguments": null,
            "baseName": {
              "contractScope": null,
              "id": 2192,
              "name": "ERC20Mintable",
              "nodeType": "UserDefinedTypeName",
              "referencedDeclaration": 4651,
              "src": "274:13:4",
              "typeDescriptions": {
                "typeIdentifier": "t_contract$_ERC20Mintable_$4651",
                "typeString": "contract ERC20Mintable"
              }
            },
            "id": 2193,
            "nodeType": "InheritanceSpecifier",
            "src": "274:13:4"
          },
          {
            "arguments": null,
            "baseName": {
              "contractScope": null,
              "id": 2194,
              "name": "ERC20Burnable",
              "nodeType": "UserDefinedTypeName",
              "referencedDeclaration": 4565,
              "src": "289:13:4",
              "typeDescriptions": {
                "typeIdentifier": "t_contract$_ERC20Burnable_$4565",
                "typeString": "contract ERC20Burnable"
              }
            },
            "id": 2195,
            "nodeType": "InheritanceSpecifier",
            "src": "289:13:4"
          }
        ],
        "contractDependencies": [
          3865,
          4534,
          4565,
          4623,
          4651,
          4720
        ],
        "contractKind": "contract",
        "documentation": null,
        "fullyImplemented": true,
        "id": 2211,
        "linearizedBaseContracts": [
          2211,
          4565,
          4651,
          3865,
          4534,
          4623,
          4720
        ],
        "name": "Deck",
        "nodeType": "ContractDefinition",
        "nodes": [
          {
            "body": {
              "id": 2209,
              "nodeType": "Block",
              "src": "427:5:4",
              "statements": []
            },
            "documentation": null,
            "id": 2210,
            "implemented": true,
            "kind": "constructor",
            "modifiers": [
              {
                "arguments": [
                  {
                    "argumentTypes": null,
                    "id": 2204,
                    "name": "name",
                    "nodeType": "Identifier",
                    "overloadedDeclarations": [],
                    "referencedDeclaration": 2197,
                    "src": "394:4:4",
                    "typeDescriptions": {
                      "typeIdentifier": "t_string_memory_ptr",
                      "typeString": "string memory"
                    }
                  },
                  {
                    "argumentTypes": null,
                    "id": 2205,
                    "name": "symbol",
                    "nodeType": "Identifier",
                    "overloadedDeclarations": [],
                    "referencedDeclaration": 2199,
                    "src": "400:6:4",
                    "typeDescriptions": {
                      "typeIdentifier": "t_string_memory_ptr",
                      "typeString": "string memory"
                    }
                  },
                  {
                    "argumentTypes": null,
                    "id": 2206,
                    "name": "decimals",
                    "nodeType": "Identifier",
                    "overloadedDeclarations": [],
                    "referencedDeclaration": 2201,
                    "src": "408:8:4",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint8",
                      "typeString": "uint8"
                    }
                  }
                ],
                "id": 2207,
                "modifierName": {
                  "argumentTypes": null,
                  "id": 2203,
                  "name": "ERC20Detailed",
                  "nodeType": "Identifier",
                  "overloadedDeclarations": [],
                  "referencedDeclaration": 4623,
                  "src": "380:13:4",
                  "typeDescriptions": {
                    "typeIdentifier": "t_type$_t_contract$_ERC20Detailed_$4623_$",
                    "typeString": "type(contract ERC20Detailed)"
                  }
                },
                "nodeType": "ModifierInvocation",
                "src": "380:37:4"
              }
            ],
            "name": "",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 2202,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 2197,
                  "name": "name",
                  "nodeType": "VariableDeclaration",
                  "scope": 2210,
                  "src": "320:18:4",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_string_memory_ptr",
                    "typeString": "string"
                  },
                  "typeName": {
                    "id": 2196,
                    "name": "string",
                    "nodeType": "ElementaryTypeName",
                    "src": "320:6:4",
                    "typeDescriptions": {
                      "typeIdentifier": "t_string_storage_ptr",
                      "typeString": "string"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 2199,
                  "name": "symbol",
                  "nodeType": "VariableDeclaration",
                  "scope": 2210,
                  "src": "340:20:4",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_string_memory_ptr",
                    "typeString": "string"
                  },
                  "typeName": {
                    "id": 2198,
                    "name": "string",
                    "nodeType": "ElementaryTypeName",
                    "src": "340:6:4",
                    "typeDescriptions": {
                      "typeIdentifier": "t_string_storage_ptr",
                      "typeString": "string"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 2201,
                  "name": "decimals",
                  "nodeType": "VariableDeclaration",
                  "scope": 2210,
                  "src": "362:14:4",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint8",
                    "typeString": "uint8"
                  },
                  "typeName": {
                    "id": 2200,
                    "name": "uint8",
                    "nodeType": "ElementaryTypeName",
                    "src": "362:5:4",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint8",
                      "typeString": "uint8"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "319:58:4"
            },
            "returnParameters": {
              "id": 2208,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "427:0:4"
            },
            "scope": 2211,
            "src": "308:124:4",
            "stateMutability": "nonpayable",
            "superFunction": null,
            "visibility": "public"
          }
        ],
        "scope": 2212,
        "src": "242:193:4"
      }
    ],
    "src": "0:436:4"
  },
  "compiler": {
    "name": "solc",
    "version": "0.5.0+commit.1d4f565a.Emscripten.clang"
  },
  "networks": {
    "4": {
      "events": {},
      "links": {},
      "address": "0x8f825b8a12d87de14DB4C9c5CC6Bc8f2b7a627F8",
      "transactionHash": "0x57a8acc9a38420719bb09b2c8f365492eb92e35425a5d673279e51ba5feba1f3"
    },
  },
  "schemaVersion": "3.0.2",
  "updatedAt": "2019-02-26T07:17:38.233Z",
  "devdoc": {
    "methods": {
      "allowance(address,address)": {
        "details": "Function to check the amount of tokens that an owner allowed to a spender.",
        "params": {
          "owner": "address The address which owns the funds.",
          "spender": "address The address which will spend the funds."
        },
        "return": "A uint256 specifying the amount of tokens still available for the spender."
      },
      "approve(address,uint256)": {
        "details": "Approve the passed address to spend the specified amount of tokens on behalf of msg.sender. Beware that changing an allowance with this method brings the risk that someone may use both the old and the new allowance by unfortunate transaction ordering. One possible solution to mitigate this race condition is to first reduce the spender's allowance to 0 and set the desired value afterwards: https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729",
        "params": {
          "spender": "The address which will spend the funds.",
          "value": "The amount of tokens to be spent."
        }
      },
      "balanceOf(address)": {
        "details": "Gets the balance of the specified address.",
        "params": {
          "owner": "The address to query the balance of."
        },
        "return": "An uint256 representing the amount owned by the passed address."
      },
      "burn(uint256)": {
        "details": "Burns a specific amount of tokens.",
        "params": {
          "value": "The amount of token to be burned."
        }
      },
      "burnFrom(address,uint256)": {
        "details": "Burns a specific amount of tokens from the target address and decrements allowance",
        "params": {
          "from": "address The address which you want to send tokens from",
          "value": "uint256 The amount of token to be burned"
        }
      },
      "decimals()": {
        "return": "the number of decimals of the token."
      },
      "decreaseAllowance(address,uint256)": {
        "details": "Decrease the amount of tokens that an owner allowed to a spender. approve should be called when allowed_[_spender] == 0. To decrement allowed value is better to use this function to avoid 2 calls (and wait until the first transaction is mined) From MonolithDAO Token.sol Emits an Approval event.",
        "params": {
          "spender": "The address which will spend the funds.",
          "subtractedValue": "The amount of tokens to decrease the allowance by."
        }
      },
      "increaseAllowance(address,uint256)": {
        "details": "Increase the amount of tokens that an owner allowed to a spender. approve should be called when allowed_[_spender] == 0. To increment allowed value is better to use this function to avoid 2 calls (and wait until the first transaction is mined) From MonolithDAO Token.sol Emits an Approval event.",
        "params": {
          "addedValue": "The amount of tokens to increase the allowance by.",
          "spender": "The address which will spend the funds."
        }
      },
      "mint(address,uint256)": {
        "details": "Function to mint tokens",
        "params": {
          "to": "The address that will receive the minted tokens.",
          "value": "The amount of tokens to mint."
        },
        "return": "A boolean that indicates if the operation was successful."
      },
      "name()": {
        "return": "the name of the token."
      },
      "symbol()": {
        "return": "the symbol of the token."
      },
      "totalSupply()": {
        "details": "Total number of tokens in existence"
      },
      "transfer(address,uint256)": {
        "details": "Transfer token for a specified address",
        "params": {
          "to": "The address to transfer to.",
          "value": "The amount to be transferred."
        }
      },
      "transferFrom(address,address,uint256)": {
        "details": "Transfer tokens from one address to another. Note that while this function emits an Approval event, this is not required as per the specification, and other compliant implementations may not emit the event.",
        "params": {
          "from": "address The address which you want to send tokens from",
          "to": "address The address which you want to transfer to",
          "value": "uint256 the amount of tokens to be transferred"
        }
      }
    }
  },
  "userdoc": {
    "methods": {}
  }
}
